# Generated by Django 4.2.7 on 2025-07-03 14:49

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EquipmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True, verbose_name='Nome da Categoria')),
                ('description', models.TextField(blank=True, verbose_name='Descrição')),
                ('icon', models.CharField(default='cube', help_text='Nome do ícone Heroicons', max_length=50, verbose_name='Ícone')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
            ],
            options={
                'verbose_name': 'Categoria de Equipamento',
                'verbose_name_plural': 'Categorias de Equipamentos',
                'ordering': ['order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Equipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Nome do Equipamento')),
                ('model', models.CharField(max_length=100, verbose_name='Modelo')),
                ('description', models.TextField(blank=True, verbose_name='Descrição Técnica')),
                ('image', models.ImageField(blank=True, null=True, upload_to='equipment/images/', verbose_name='Imagem Ilustrativa')),
                ('estimated_duration', models.IntegerField(help_text='Duração estimada em minutos', validators=[django.core.validators.MinValueValidator(1)], verbose_name='Duração Estimada (min)')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('order', models.IntegerField(default=0, verbose_name='Ordem de Exibição')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Criação')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Última Atualização')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipments', to='equipment.equipmentcategory', verbose_name='Categoria')),
            ],
            options={
                'verbose_name': 'Equipamento',
                'verbose_name_plural': 'Equipamentos',
                'ordering': ['category__order', 'order', 'name'],
                'unique_together': {('category', 'model')},
            },
        ),
        migrations.CreateModel(
            name='ClientEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('assigned_at', models.DateTimeField(auto_now_add=True, verbose_name='Data de Atribuição')),
                ('is_active', models.BooleanField(default=True, verbose_name='Ativo')),
                ('client', models.ForeignKey(limit_choices_to={'user_type': 'client'}, on_delete=django.db.models.deletion.CASCADE, related_name='client_equipments', to=settings.AUTH_USER_MODEL, verbose_name='Cliente')),
                ('equipment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='equipment_clients', to='equipment.equipment', verbose_name='Equipamento')),
            ],
            options={
                'verbose_name': 'Equipamento do Cliente',
                'verbose_name_plural': 'Equipamentos dos Clientes',
                'unique_together': {('client', 'equipment')},
            },
        ),
    ]
